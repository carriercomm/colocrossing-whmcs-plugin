<?php
	$title = $this->device->getName();

	if(isset($this->product)) {
		$title = $this->product->getName() . ' - ' . $title;
	}
?>

<div class="page-header">
    <div class="styled_title"><h1><?php echo $title; ?></h1></div>
</div>

<?php
	$this->renderFlashMessage();
?>

<div id="tabs">
    <ul class="nav nav-tabs" data-tabs="tabs">
    <?php
    	echo '<li id="overviewnav" class="active"><a href="#overview" data-toggle="tab">Information</a></li>';
    	echo '<li id="assetsnav"><a href="#assets" data-toggle="tab">Assets</a></li>';

    	if($this->type->isNetworked() || $this->type->isVirtual()) {
			echo '<li id="subnetsnav"><a href="#subnets" data-toggle="tab">Subnets</a></li>';
		}

		if($this->type->isPowerEndpoint()) {
			echo '<li id="power-portsnav"><a href="#power-ports" data-toggle="tab">Power Ports</a></li>';
		} else if($this->type->isPowerDistribution()) {
			echo '<li id="power-portsnav"><a href="#power-ports" data-toggle="tab">Power Ports</a></li>';
		}

		if($this->type->isNetworkEndpoint()) {
			echo '<li id="network-portsnav"><a href="#network-ports" data-toggle="tab">Network Ports</a></li>';
		} else if($this->type->isNetworkDistribution()) {
			echo '<li id="network-portsnav"><a href="#network-ports" data-toggle="tab">Network Ports</a></li>';
		}

		if($this->type->isRack()) {
			echo '<li id="racked-devicesnav"><a href="#racked-devices" data-toggle="tab">Racked Devices</a></li>';
		}

		if($this->type->isNetworkEndpoint() && count($this->bandwidth_graphs)) {
			echo '<li id="bandwidth-usagenav"><a href="#bandwidth-usage" data-toggle="tab">Bandwidth Usage</a></li>';

		}
    ?>
    </ul>
</div>

<?php
	$this->renderTemplate('/devices/_overview.phtml', array(
		'device' => $this->device,
		'type' => $this->type,
		'service' => $this->service,
		'service_url' => ColoCrossing_Utilities::buildUrl('/clientarea.php', array(
			'action' => 'productdetails',
			'id' => $this->service->getId()
		)),
		'product' => $this->product,
		'product_group' => $this->product_group
	));

	$this->renderTemplate('/devices/_assets.phtml', array(
		'assets' => $this->assets,
	));

	if($this->type->isNetworked() || $this->type->isVirtual()) {
		$this->renderTemplate('/devices/_subnets.phtml', array(
			'base_url' => $this->base_url,
			'subnets' => $this->subnets
		));
	}

	if($this->type->isPowerEndpoint()) {
		$this->renderTemplate('/devices/_power_endpoint_ports.phtml', array(
			'control_url' => ColoCrossing_Utilities::buildUrl($this->base_url, array(
				'controller' => 'devices',
				'action' => 'update-power-ports'
			)),
			'device' => $this->device,
			'power_distribution_units' => $this->power_distribution_units
		));
	} else if($this->type->isPowerDistribution()) {
		$this->renderTemplate('/devices/_power_distribution_ports.phtml', array(
			'control_url' => ColoCrossing_Utilities::buildUrl($this->base_url, array(
				'controller' => 'devices',
				'action' => 'update-power-ports'
			)),
			'pdu' => $this->device
		));
	}

	if($this->type->isNetworkEndpoint()) {
		$this->renderTemplate('/devices/_network_endpoint_ports.phtml', array(
			'control_url' => ColoCrossing_Utilities::buildUrl($this->base_url, array(
				'controller' => 'devices',
				'action' => 'update-network-ports'
			)),
			'device' => $this->device,
			'switches' => $this->switches
		));
	} else if($this->type->isNetworkDistribution()) {
		$this->renderTemplate('/devices/_network_distribution_ports.phtml', array(
			'control_url' => ColoCrossing_Utilities::buildUrl($this->base_url, array(
				'controller' => 'devices',
				'action' => 'update-network-ports'
			)),
			'switch' => $this->device
		));
	}

	if($this->type->isRack()) {
		$this->renderTemplate('/devices/_racked_devices.phtml', array(
			'base_url' => $this->base_url,
			'current_user' => $this->current_user,
			'devices' => $this->devices
		));
	}

	if($this->type->isNetworkEndpoint() && count($this->bandwidth_graphs)) {
		$this->renderTemplate('/devices/_bandwidth_usage.phtml', array(
			'bandwidth_graph_url' => ColoCrossing_Utilities::buildUrl($this->base_url, array(
				'controller' => 'devices',
				'action' => 'bandwidth-graph'
			)),
			'bandwidth_graphs' => $this->bandwidth_graphs
		));
	}
?>
